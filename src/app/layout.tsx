import "~/styles/globals.css";
import "@uploadthing/react/styles.css";

import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";

import type { Metadata } from "next";
import { Geist } from "next/font/google";
import { TopNav } from "./_components/topnav";
import { ClerkProvider } from '@clerk/nextjs';
import { extractRouterConfig } from "uploadthing/server";
import { ourFileRouter } from "./api/uploadthing/core";
import { toast, Toaster } from "sonner";
import { CSPostHogProvider } from "./_analytics/provider";

export const metadata: Metadata = {
	title: "Next Project",
	description: "Generated by Next Project",
	icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
	subsets: ["latin"],
	variable: "--font-geist-sans",
});

export default function RootLayout({
	children,
	modal,
}: Readonly<{ 
	children: React.ReactNode;
	modal: React.ReactNode;
}>) {
	return (
		<html lang="en" className={`${geist.variable}`}>  
			<body>
				<NextSSRPlugin
					/**
					 * The `extractRouterConfig` will extract **only** the route configs
					 * from the router to prevent additional information from being
					 * leaked to the client. The data passed to the client is the same
					 * as if you were to fetch `/api/uploadthing` directly.
					 */
					routerConfig={extractRouterConfig(ourFileRouter)}
				/>
				<ClerkProvider>
					<CSPostHogProvider>
						<div className="h-screen grid grid-rows-[auto, 1fr]">
							<TopNav />
							<main className="overflow-y-scroll">
								{children}
							</main>
						</div>
						{modal}
						<div id="modal-root" />
						<Toaster />
					</CSPostHogProvider>
				</ClerkProvider>
			</body>
		</html>
	);
}